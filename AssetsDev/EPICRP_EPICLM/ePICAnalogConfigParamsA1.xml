<RTUReadWriteReqDef>
	<msgInfo protocol="BAKER" description="Test File" />
	<regBlocks>
		<block addr="280" count="3" protocoldatatype="4" />
		<block addr="283" count="3" protocoldatatype="2" />
		<block addr="286" count="3" protocoldatatype="4" />
		<block addr="289" count="2" protocoldatatype="2" />
		<block addr="291" count="1" protocoldatatype="4" />
		<block addr="292" count="2" protocoldatatype="2" />
		<block addr="295" count="2" protocoldatatype="4" />
	</regBlocks>
	<regValuesToWrite>
		<val addr="283">0</val>
		<val addr="284">0</val>
		<val addr="285">0</val>
		<val addr="286">0</val>
		<val addr="287">0</val>
		<val addr="288">0</val>
		<val addr="289">0</val>
		<val addr="290">0</val>
		<val addr="291">0</val>
		<val addr="292">0</val>
		<val addr="293">0</val>
	</regValuesToWrite>
	<registers>
		<register control="select" desc="'AI1' Analog Input Type                   " key="283">
			<rpc mask="###" writable="yes" address="283" type="Byte" m="1" c="0" fmt="str  ">comm. fail</rpc>
		</register>
		<register control="text" desc="'AI1' Decimal Places                      " key="284">
			<rpc mask="###" writable="yes" address="284" type="Byte" m="1" c="0" fmt="str  ">comm. fail</rpc>
		</register>
		<register control="select" desc="'AI1' Engineering Unit Label                           " key="285">
			<rpc mask="###" writable="yes" address="285" type="Byte" m="1" c="0" fmt="str  ">comm. fail</rpc>
		</register>
		<register control="text" desc="'AI1' Scaling - Low Value                 " key="286">
			<rpc mask="###" writable="yes" address="286" type="Word" m="1" c="0" fmt="str  ">comm. fail</rpc>
		</register>
		<register control="text" desc="'AI1' Scaling - High Value                " key="287">
			<rpc mask="###" writable="yes" address="287" type="Word" m="1" c="0" fmt="str  ">comm. fail</rpc>
		</register>
		<register control="text" desc="'AI1' Lower Alarm Limit                   " key="288">
			<rpc mask="###" writable="yes" address="288" type="Word" m="1" c="0" fmt="str  ">comm. fail</rpc>
		</register>
		<register control="select" desc="'AI1' Lower Alarm Action '1'                " key="289">
			<rpc mask="###" writable="yes" address="289" type="Byte" m="1" c="0" fmt="str  ">comm. fail</rpc>
		</register>
		<register control="select" desc="'AI1' Lower Alarm Action '2'                " key="290">
			<rpc mask="###" writable="yes" address="290" type="Byte" m="1" c="0" fmt="str  ">comm. fail</rpc>
		</register>
		<register control="text" desc="'AI1' Upper Alarm Limit                   " key="291">
			<rpc mask="###" writable="yes" address="291" type="Word" m="1" c="0" fmt="str  ">comm. fail</rpc>
		</register>
		<register control="select" desc="'AI1' Upper Alarm Action '1'                " key="292">
			<rpc mask="###" writable="yes" address="292" type="Byte" m="1" c="0" fmt="str  ">comm. fail</rpc>
		</register>
		<register control="select" desc="'AI1' Upper Alarm Action '2'                " key="293">
			<rpc mask="###" writable="yes" address="293" type="Byte" m="1" c="0" fmt="str  ">comm. fail</rpc>
		</register>
		<register control="text" desc="'AI1' Raw A/D Channel Value Counts / Volts  " key="280">
			<rpc mask="###" writable="no" address="280" type="Word" m="1" c="0" fmt="str  ">comm. fail</rpc>
		</register>
		<register control="text" desc="'AI1' Input Value in Offset Volts         " key="281">
			<rpc mask="###" writable="no" address="281" type="Word" m="1" c="0" fmt="str  ">comm. fail</rpc>
		</register>
		<register control="text" desc="'AI1' Scaled Engineering Unit Input Value              " key="282">
			<rpc mask="###" writable="no" address="282" type="Word" m="1" c="0" fmt="str  ">comm. fail</rpc>
		</register>
		<register control="text" desc="'AI1' Lowest Recorded Input Value         " key="295">
			<rpc mask="###" writable="no" address="295" type="Word" m="1" c="0" fmt="str  ">comm. fail</rpc>
		</register>
		<register control="text" desc="'AI1' Highest Recorded Input Value        " key="296">
			<rpc mask="###" writable="no" address="296" type="Word" m="1" c="0" fmt="str  ">comm. fail</rpc>
		</register>
	</registers>
</RTUReadWriteReqDef>